import java.util.*;

class Solution {
    public long solution(int n, int[] works) {
        PriorityQueue<Integer> time = new PriorityQueue<>(Collections.reverseOrder());

        for (int work : works) {
            time.offer(work);
        }

        for (int i = 0; i < n; i++) {
            int max = time.poll();
            if (max <= 0) break;
            time.offer(max - 1);
        }

        long sum = 0;
        while (!time.isEmpty()) {
            sum += Math.pow(time.poll(), 2);
        }

        return sum;
    }


}