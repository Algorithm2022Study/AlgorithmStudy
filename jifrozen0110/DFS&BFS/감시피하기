package DFS_BFS;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.PriorityQueue;
import java.util.StringTokenizer;

public class practice {
	public static int[] dx={0,-1,0,1};
	public static int[] dy={1,0,-1,0};
	public static int N=0;
	public static boolean check=false;
	public static int[][] map;
	public static boolean[][] visited;
	public static ArrayList<Integer> teacherX=new ArrayList<>();
	public static ArrayList<Integer> teacherY=new ArrayList<>();
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

		N = Integer.parseInt(br.readLine());
		map=new int[N][N];
		visited=new boolean[N][N];
		StringTokenizer st=null;
		for(int i=0;i<N;i++){
			st = new StringTokenizer(br.readLine());
			for(int j=0;j<N;j++){
				String s=st.nextToken();
				if(s.equals("S")){
					map[i][j]=1;
				}else if(s.equals("T")){
					map[i][j]=2;
					teacherX.add(i);teacherY.add(j);
				}else{
					map[i][j]=0;
				}

			}
		}

		DFS(0);

		if(check)
			System.out.println("YES");
		else
			System.out.println("NO");
	}
	public static void DFS(int count){
		if(count==3){
			if(!teacherSearchStudent()){
					check=true;}
			return;
		}
		for(int i=0;i<N;i++){
			for(int j=0;j<N;j++){
				if(map[i][j]==0&&visited[i][j]==false) {
					map[i][j] = 3;
					visited[i][j]=true;
					DFS(count + 1);
					visited[i][j]=false;
					map[i][j] = 0;

				}
			}
		}
	}
	public static boolean teacherSearchStudent(){
		for(int i=0;i<teacherX.size();i++){
			int x=teacherX.get(i);
			int y=teacherY.get(i);
			for(int j=x-1;j>=0;j--){
				if(map[j][y]==1) {return true;}
				if(map[j][y]==3) {break;}
			}
			for(int j=x+1;j<N;j++){
				if(map[j][y]==1) {return true;}
				if(map[j][y]==3) {break;}
			}
			for(int j=y-1;j>=0;j--){
				if(map[x][j]==1) {return true;}
				if(map[x][j]==3) {break;}
			}
			for(int j=y+1;j<N;j++){
				if(map[x][j]==1) {return true;}
				if(map[x][j]==3) {break;}
			}
		}
		return false;
	}
}
